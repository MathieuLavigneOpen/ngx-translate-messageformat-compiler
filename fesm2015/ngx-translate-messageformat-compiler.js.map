{"version":3,"file":"ngx-translate-messageformat-compiler.js","sources":["ng://ngx-translate-messageformat-compiler/lib/message-format-config.ts","ng://ngx-translate-messageformat-compiler/lib/translate-message-format-compiler.ts","ng://ngx-translate-messageformat-compiler/lib/translate-message-format-debug-compiler.ts","ng://ngx-translate-messageformat-compiler/public-api.ts","ng://ngx-translate-messageformat-compiler/ngx-translate-messageformat-compiler.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\n\nexport const MESSAGE_FORMAT_CONFIG = new InjectionToken<MessageFormatConfig>(\n  \"MESSAGE_FORMAT_CONFIG\"\n);\n\nexport interface MessageFormatConfig {\n  biDiSupport?: boolean;\n  formatters?: {\n    [name: string]: (val: any, lc: string, arg?: string) => string;\n  };\n  locales?: string | string[];\n  strictNumberSign?: boolean;\n}\n\nexport const defaultConfig: MessageFormatConfig = {\n  biDiSupport: false,\n  formatters: undefined,\n  locales: undefined,\n  strictNumberSign: false\n};\n","import { Inject, Optional } from \"@angular/core\";\nimport { TranslateCompiler } from \"@ngx-translate/core\";\nimport * as MessageFormat from \"messageformat\";\n\nimport {\n  defaultConfig,\n  MESSAGE_FORMAT_CONFIG,\n  MessageFormatConfig\n} from \"./message-format-config\";\n\n/**\n * This compiler expects ICU syntax and compiles the expressions with messageformat.js\n */\nexport class TranslateMessageFormatCompiler extends TranslateCompiler {\n  private messageFormat: MessageFormat;\n\n  constructor(\n    @Optional()\n    @Inject(MESSAGE_FORMAT_CONFIG)\n    config?: MessageFormatConfig\n  ) {\n    super();\n\n    const { locales, formatters, biDiSupport, strictNumberSign } = {\n      ...defaultConfig,\n      ...config\n    };\n\n    this.messageFormat = new MessageFormat(locales);\n\n    if (formatters) {\n      this.messageFormat.addFormatters(formatters);\n    }\n    if (biDiSupport) {\n      this.messageFormat.setBiDiSupport(biDiSupport);\n    }\n    if (strictNumberSign) {\n      this.messageFormat.setStrictNumberSign(strictNumberSign);\n    }\n  }\n\n  public compile(value: string, lang: string): (params: any) => string {\n    return this.messageFormat.compile(value, lang);\n  }\n\n  public compileTranslations(translations: any, lang: string): any {\n    return this.messageFormat.compile(translations, lang);\n  }\n}\n","import { TranslateMessageFormatCompiler } from \"./translate-message-format-compiler\";\n\n/* tslint:disable-next-line no-console */\nconst log = (...message: string[]) => console.log(tag, ...message);\nconst tag = \"[TranslateMessageFormatCompiler]\";\n\nexport class TranslateMessageFormatDebugCompiler extends TranslateMessageFormatCompiler {\n  public compile(value: string, lang: string): (params: any) => string {\n    log(`COMPILE (${lang})`, value);\n    const interpolationFn = super.compile(value, lang);\n\n    return this.wrap(interpolationFn, value);\n  }\n\n  public compileTranslations(value: any, lang: string): any {\n    log(`COMPILE (${lang})`, value);\n    const { toString, ...interpolationFns } = super.compileTranslations(\n      value,\n      lang\n    );\n\n    return { toString, ...this.wrapRecursively(interpolationFns, value) };\n  }\n\n  private wrap(\n    fn: (params: any) => string,\n    reference: string\n  ): (params: any) => string {\n    return (params: any) => {\n      log(\"INTERPOLATE\", reference, params);\n      return fn(params);\n    };\n  }\n\n  private wrapRecursively(obj: any, referenceObj: any): any {\n    return Object.keys(obj).reduce((acc: any, key: string) => {\n      const value = obj[key];\n      const referenceValue = referenceObj[key];\n\n      return typeof value === \"function\"\n        ? { ...acc, [key]: this.wrap(value, referenceValue) }\n        : { ...acc, [key]: this.wrapRecursively(value, referenceValue) };\n    }, {});\n  }\n}\n","/*\n * Public API Surface of ngx-translate-messageformat-compiler\n */\n\nexport * from \"./lib/message-format-config\";\nexport * from \"./lib/translate-message-format-compiler\";\nexport * from \"./lib/translate-message-format-debug-compiler\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}